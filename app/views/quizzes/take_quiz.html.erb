<% content_for :page_title do %><%= @quiz.readable_type %>: <%= @quiz.quiz_title %><% end %>

<% content_for :right_side do %>
  <div class="rs-margin-lr rs-margin-top">
  <% if @submission && params[:preview] %>
    <a id="preview_mode_link" href="<%= context_url(@context, :edit_context_quiz_url, @quiz) %>" class="button button-sidebar-wide"><%= image_tag "edit.png" %> Keep Editing This <%= @quiz.readable_type %></a><br/>
  <% end %>
  <h3 style="margin: 0px;">Questions</h3>
  <ul id="question_list" style="max-height: 200px; overflow: auto;">
    <% @submission.questions_as_object.compact.each do |q| %>
      <li id="list_question_<%= q[:id] %>" class="list_question <%= "marked" if @stored_params.send("question_#{q[:id]}_marked") %>">
        <a class="jump_to_question_link" href="#question_<%= q[:id] %>"><%= q[:question_name] %></a>
      </li>
    <% end %>
  </ul>
  <% if @submission.finished_at %>
    <div class="quiz_score">
      Score: <span class="score_value"><%= @submission.score %></span> out of <%= @quiz.points_possible %>
    </div>
  <% end %>
  <div>
    <span class="time_header">Time Running:</span>
    <span style="font-size: 0.8em; padding-left: 10px;">
      <a href="#" class="hide_time_link">Hide</a>
    </span>
    <div class="clear"></div>
  </div>
  <div class="time_running" style="font-size: 1.2em; padding-left: 20px; color: #444;"></div>
  </div>
<% end %>
<% jammit_css :quizzes %>

<h2><%= @quiz.quiz_title || @quiz.readable_type %></h2>
<% if @submission.preview? %>
<h3><%= image_tag "warning.png" %> This is a preview of the draft version of the quiz</h3>
<% end %>
Started: <%= datetime_string(@submission.started_at) %>

<% js_block do %><%= javascript_include_tag "tinymce/jscripts/tiny_mce/tiny_mce.js" %><% end %>
<% js_block do %>
<script>
var lastAnswerSelected = null;
$(document).mousedown(function(event) {
  lastAnswerSelected = $(event.target).parents(".answer")[0];
}).keydown(function() {
  lastAnswerSelected = null;
});
$(document).ready(function() {
  $.scrollSidebar();
  $("#questions").delegate('.group_top,.question,.answer_select', 'mouseover', function(event) {
    $(this).addClass('hover');
  }).delegate('.group_top,.question,.answer_select', 'mouseout', function(event) {
    $(this).removeClass('hover');
  });
  if($("#preview_mode_link").length == 0) {
    window.onbeforeunload = function() {
      quizSubmission.updateSubmission();
      if(!quizSubmission.submitting && !quizSubmission.alreadyAcceptedNavigatingAway) {
        return "You're about to leave the quiz unfinished.  Continue anyway?";
      }
    };
    $(document).delegate('a', 'click', function(event) {
      if($(this).closest('.ui-dialog,.mceToolbar').length > 0) { return; }
      if(!event.isDefaultPrevented()) {
        var url = $(this).attr('href') || "";
        var hashStripped = location.href;
        if(hashStripped.indexOf('#')) {
          hashStripped = hashStripped.substring(0, hashStripped.indexOf('#'));
        }
        if(url.indexOf('#') == 0 || url.indexOf(hashStripped + "#") == 0) {
          return;
        }
        var result = confirm("You're about to navigate away from this page.  Continue anyway?");
        if(!result) {
          event.preventDefault();
        } else {
          quizSubmission.alreadyAcceptedNavigatingAway = true
        }
      }
    });
  }
  $(".list_question").hover(function(event) {
    if($(this).hasClass('marked')) {
      $(this).attr('title', "You marked this question to come back to later");
    } else if($(this).hasClass('answered')) {
      $(this).attr('title', "Answered");
    } else {
      $(this).attr('title', "Haven't Answered yet");
    }
    $("#" + $(this).attr('id').substring(5)).addClass('related');
  }, function(event) {
    $("#questions .question_holder .question").removeClass('related');
  });
  $(".jump_to_question_link").click(function(event) {
    event.preventDefault();
    var $obj = $($(this).attr('href'));
    $("html,body").scrollTo($obj);
    $obj.find(":input:first").focus().select();
  });
  $("#questions").find(":checkbox,:radio,label").bind('change mouseup', function(event) {
    if(lastAnswerSelected == $(this).parents(".answer")[0]) {
      $(this).parents(".answer").find(":checkbox,:radio").blur();
      quizSubmission.updateSubmission();
    }
//      $(this).parents(".answer").find("label").focus();
//      $(document).focus();
  });
  $("#questions").find(":text,textarea").bind('change blur', function(event, update) {
    if(update !== false) {
      quizSubmission.updateSubmission();
    }
  });
  $(".numerical_question_input").bind('keypress', function(event) {
    var string = String.fromCharCode(event.charCode || event.keyCode);
    if(event.charCode == 0 || string == "-" || string == "." || string == "0" || parseInt(string, 10)) {
      $(this).triggerHandler('focus');
    } else {
      $(this).errorBox("only numerical values are accepted");
      event.preventDefault();
      event.stopPropagation();
    }
  }).bind('change blur', function() {
    var val = parseFloat($(this).val());
    if(isNaN(val)) { val = ""; }
    $(this).val(val);
  });
  $(".flag_question").click(function() {
    $(this).parents(".question").toggleClass('marked');
    $("#list_" + $(this).parents(".question").attr('id')).toggleClass('marked');
  });
  setInterval(function() {
    $("textarea.question_input").each(function() {
      $(this).triggerHandler('change', false);
    });
  }, 2500);
  $(".question_input").change(function() {
    var tagName = $(this)[0].tagName.toUpperCase();
    var val = "";
    if(tagName == "TEXTAREA") {
      val = $(this).editorBox('get_code');
    } else if(tagName == "TEXTAREA" || tagName == "SELECT" || $(this).attr('type') == "text") {
      val = $(this).val();
    } else {
      $(this).parents(".question").find(".question_input").each(function() {
        if($(this).attr('checked') || $(this).attr('selected')) {
          val = true;
        }
      });
    }
    if(val) {
      $("#list_" + $(this).parents(".question").attr('id')).addClass('answered');
    } else {
      $("#list_" + $(this).parents(".question").attr('id')).removeClass('answered');
    }
  }).change();
  $(".hide_time_link").click(function(event) {
    event.preventDefault();
    if($(".time_running").css('visibility') != 'hidden') {
      $(".time_running").css('visibility', 'hidden');
      $(this).text("Show");
    } else {
      $(".time_running").css('visibility', 'visible');
      $(this).text("Hide");
    }
  });
  $("#question_list .list_question").each(function() {
    if($(this).find(".jump_to_question_link").text() == "Spacer") {
      $(this).remove();
    }
  });
  $("#submit_quiz_form").submit(function(event) {
    unanswered = $("#question_list .list_question:not(.answered)").length;
    if(unanswered && !quizSubmission.submitting) {
      var result = confirm("You have " + unanswered + " unanswered question" + (unanswered == 1 ? "" : "s") + " (see the right sidebar for details).  Submit anyway?");
      if(!result) {
        event.preventDefault();
        event.stopPropagation();
        return false;
      }
    }
    quizSubmission.submitting = true;
    $('.time_running').hide();
  });
  $(".submit_quiz_button").click(function(event) {
    event.preventDefault();
    $("#times_up_dialog").dialog('close');
  });
  setTimeout(function() {
    $(".question_holder textarea.question_input").each(function() {
      $(this).attr('id', 'question_input_' + quizSubmission.contentBoxCounter++);
      $(this).editorBox();
    });
  }, 2000);
  setInterval(quizSubmission.updateTime, 200);
  setInterval(function() {
    $.ajaxJSON(location.protocol + '//' + location.host + "/simple_response.json?user_id=<%= @current_user ? @current_user.id : "none" %>&rnd=" + Math.round(Math.random() * 9999999), 'GET', {}, function() {
    }, function() {
      ajaxErrorFlash("Connection to " + location.host + " was lost.  Please make sure you're connected to the Internet before continuing.", request);
    }, {skipDefaultError: true});
  }, 30000);
  setTimeout(function() { quizSubmission.updateSubmission(true) }, 15000);
});
var quizSubmission = {
  referenceDate: null,
  referenceOffset: 0,
  countDown: null,
  isDeadline: true,
  fiveMinuteDeadline: false,
  oneMinuteDeadline: false,
  submitting: false,
  dialogged: false,
  contentBoxCounter: 0,
  setReferenceDate: function(now) {
    var startDate = Date.parse($(".started_at").text());
    var serverNow = Date.parse($(".now").text()) || new Date();
    var clientNow = new Date();
    quizSubmission.clientServerDiff = serverNow.getTime() - clientNow.getTime();
    quizSubmission.referenceDate = Date.parse($(".end_at").text());
    $(".time_header").text("Time Remaining:");
    if(!quizSubmission.referenceDate) {
      quizSubmission.isDeadline = false;
      $(".time_header").text("Time Elapsed:");
      quizSubmission.referenceDate = Date.parse($(".started_at").text());//end_at = new Date();
    }
    var offsetDiff = parseInt($(".utc_offset").text(), 10);
    var myOffset = now.getTimezoneOffset();
    if(!isNaN(offsetDiff) && !isNaN(myOffset)) {
      quizSubmission.referenceOffset = (offsetDiff * 1000) + (myOffset * 60000);
    }
  },
  lastSubmissionUpdate: new Date(),
  currentlyBackingUp: false,
  updateSubmission: function(repeat) {
    if(quizSubmission.submitting && !repeat) { return; }
    var now = new Date();
    if((now - quizSubmission.lastSubmissionUpdate) < 1000) { return }
    if(quizSubmission.currentlyBackingUp) { return; }
    quizSubmission.currentlyBackingUp = true;
    quizSubmission.lastSubmissionUpdate = new Date();
    var data = $("#submit_quiz_form").getFormData();
    $(".question_holder .question.marked").each(function() {
      data[$(this).attr('id') + "_marked"] = "1";
    });
    $.ajaxJSON($("#quiz_urls .backup_quiz_submission_url").attr('href'), 'PUT', data, function(data) {
      quizSubmission.currentlyBackingUp = false;
      if(repeat) {
        setTimeout(function() {quizSubmission.updateSubmission(true) }, 30000);
      }
    }, function() {
      quizSubmission.currentlyBackingUp = false;
      $.ajaxJSON(location.protocol + '//' + location.host + "/simple_response.json?user_id=<%= @current_user ? @current_user.id : "none" %>&rnd=" + Math.round(Math.random() * 9999999), 'GET', {}, function() {
      }, function() {
        ajaxErrorFlash("Connection to " + location.host + " was lost.  Please make sure you're connected to the Internet before continuing.", request);
      }, {skipDefaultError: true});
      
      if(repeat) {
        setTimeout(function() {quizSubmission.updateSubmission(true) }, 30000);
      }
    }, {timeout: 5000, skipDefaultError: true});
  },
  updateTime: function() {
    var now = new Date();
    if(!quizSubmission.referenceDate) {
      quizSubmission.setReferenceDate(now);
    }
    if(quizSubmission.countDown) {
      var diff = quizSubmission.countDown.getTime() - now.getTime() - quizSubmission.clientServerDiff;
      if(diff <= 0) {
        diff = 0;
      }
      var d = new Date(diff);
      $(".countdown_seconds").text(d.getUTCSeconds());
      if(diff <= 0 && !quizSubmission.submitting) {
        quizSubmission.submitting = true;
        $("#submit_quiz_form").submit();
      }
    }
    var diff = quizSubmission.referenceDate.getTime() - now.getTime() - quizSubmission.clientServerDiff;
    if(quizSubmission.isDeadline) {
      if(diff < 1000) {
        diff = 0;
      }
      if(diff < 1000 && !quizSubmission.dialogged) {
        quizSubmission.dialogged = true;
        quizSubmission.countDown = new Date(now.getTime() + 10000);
        $("#times_up_dialog").show().dialog({
          title: "Time's Up!",
          width: "auto",
          height: "auto",
          modal: true,
          overlay: {
            backgroundColor: "#000",
            opacity: 0.7
          },
          close: function() {
            if(!quizSubmission.submitting) {
              quizSubmission.submitting = true;
              $("#submit_quiz_form").submit();
            }
          }
        });
      } else if(diff > 30000 && diff < 60000 && !quizSubmission.oneMinuteDeadline) {
        quizSubmission.oneMinuteDeadline = true;
        $.flashMessage("One Minute Left");
      } else if(diff > 250000 && diff < 300000 && !quizSubmission.fiveMinuteDeadline) {
        quizSubmission.fiveMinuteDeadline = true;
        $.flashMessage("Five Minutes Left");
      }
    }
    quizSubmission.updateTimeString(diff);
  },
  updateTimeString: function(diff) {
    var date = new Date(Math.abs(diff));
    var yr = date.getUTCFullYear() - 1970;
    var mon = date.getUTCMonth();
    var day = date.getUTCDate() - 1;
    var hr = date.getUTCHours();
    var min = date.getUTCMinutes();
    var sec = date.getUTCSeconds();
    var times = [];
    if(yr) { times.push(yr + (yr == 1 ? " Year" : " Years")); }
    if(mon) { times.push(mon + (mon == 1 ? " Month" : " Months")); }
    if(day) { times.push(day + (day == 1 ? " Day" : " Days")); }
    if(hr) { times.push(hr + (hr == 1 ? " Hour" : " Hours")); }
    if(true || min) { times.push(min + (min == 1 ? " Minute" : " Minutes")); }
    if(true || sec) { times.push(sec + (sec == 1 ? " Second" : " Seconds")); }
    $(".time_running,.time_remaining").text(times.join(", "));
  }
};
function updateTime() {
}
</script>
<% end %>
<div id="questions" class="assessing">
<% form_tag context_url(@context, :controller => :quiz_submissions, :action => :create, :quiz_id => @quiz.id, :user_id => (@current_user && @current_user.id)), {:id => "submit_quiz_form"} do %>
<input type="hidden" name="attempt" value="<%= @submission.attempt %>"/>
<% if @submission.preview? %>
  <input type="hidden" name="preview" value="1"/>
<% end %>
<div style="display: none;" id="quiz_urls">
  <a href="<%= context_url(@context, :backup_context_quiz_quiz_submissions_url, @quiz.id) %>?user_id=<%= @current_user && @current_user.id %><%= "&preview=1" if @submission.preview? %>" class="backup_quiz_submission_url">&nbsp;</a>
  <span class="started_at"><%= @submission.started_at %></span>
  <span class="now"><%= ActiveSupport::TimeWithZone.new(Time.now.utc, Time.zone) %></span>
  <span class="end_at"><%= @submission.end_at %></span>
  <span class="utc_offset"><%= Time.now.utc_offset %></span>
</div>
<%= render :partial => "display_question", :collection => @submission.questions_as_object, :locals => {:assessing => true } %>
<div class="button-container">
  <button type="submit" class="button submit_button">Submit Answers</button>
</div>
<% end %>
</div>
<div style="font-size: 1.2em; display: none;" id="times_up_dialog">
  Time's Up!  Submitting results in:
  <div style="text-align: center; font-size: 1.2em; margin: 10px;" class="countdown_seconds"></div>
  <div class="button-container">
    <button type="button" class="submit_quiz_button button">Ok, fine</button>
  </div>
</div>